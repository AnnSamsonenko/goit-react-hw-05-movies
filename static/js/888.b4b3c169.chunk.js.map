{"version":3,"file":"static/js/888.b4b3c169.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/ApiMovies.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","views/MoviesSearch.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  width: fit-content;\n  margin: 0 auto;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <BallTriangle\n        heigth=\"50\"\n        width=\"50\"\n        color=\"#ff6838\"\n        ariaLabel=\"loading\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  list-style-type: circle;\n  list-style-position: inside;\n  column-count: 2;\n  height: 400px;\n`;\n\nexport const FilmsItem = styled.li`\n  font-size: 18px;\n  line-height: 24px;\n  color: #363853;\n  transition: color 250ms ease;\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  &:hover {\n    color: #ff7a50;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmsItem, FilmsList } from './MovieList.styled';\nimport propTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <FilmsList>\n      {movies.map(movie => {\n        return (\n          <FilmsItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </FilmsItem>\n        );\n      })}\n    </FilmsList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c3a4cb8038ee207f234d0a08ae3fa54d';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrending() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchByQuery(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchActors(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: fit-content;\n  margin: 0 auto 20px auto;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  padding: 8px;\n  border: 1px solid #363853;\n  border-radius: 20px 4px;\n  margin-right: 6px;\n  outline: none;\n  transition: border 250ms linear;\n  &:focus {\n    border: 1px solid #ff7a50;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  color: #fff;\n  padding: 8px 14px;\n  background-color: #ff7a50;\n  box-shadow: 0px 5px 12px rgba(255, 104, 56, 0.19);\n  border-radius: 20px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  text-align: center;\n`;\n","import { Form, Input, SubmitButton } from './Searchbar.styled';\nimport propTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" autocomplete=\"off\" />\n      <SubmitButton type=\"submit\">Search</SubmitButton>\n    </Form>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchByQuery } from 'services/ApiMovies';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (query && query !== '') {\n      const fetch = async () => {\n        try {\n          setLoading(true);\n          setError('');\n          const { results } = await fetchByQuery(query);\n          const updatedMovies = formatData(results);\n          setMovies(updatedMovies);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      const formatData = data => {\n        return data.map(item => ({ id: item.id, title: item.title }));\n      };\n\n      fetch();\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleSubmit} />\n\n      {loading && <Loader />}\n      {error && <h2>Something went wrong, please try again</h2>}\n      {movies && !loading && !error && <MovieList movies={movies} />}\n      {movies && !loading && !error && movies.length === 0 && (\n        <h3>Nothing found with such query</h3>\n      )}\n    </Container>\n  );\n};\n"],"names":["LoaderWrapper","styled","Loader","heigth","width","color","ariaLabel","FilmsList","FilmsItem","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","BASE_URL","API_KEY","fetchMovies","url","config","axios","response","data","fetchTrending","fetchByQuery","query","fetchMovieById","movieId","fetchActors","fetchReviews","Form","Input","SubmitButton","Searchbar","onSubmit","type","name","autocomplete","MoviesSearch","useSearchParams","searchParams","setSearchParams","get","useState","setMovies","loading","setLoading","error","setError","useEffect","fetch","results","updatedMovies","formatData","message","item","Container","e","preventDefault","currentTarget","elements","value","length"],"sourceRoot":""}