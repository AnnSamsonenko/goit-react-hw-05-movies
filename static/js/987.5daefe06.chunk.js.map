{"version":3,"file":"static/js/987.5daefe06.chunk.js","mappings":"gMAEaA,E,QAAgBC,GAAAA,IAAH,kE,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,gB,0MCRZC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SACyBC,IAAAA,IAAUF,EAAKC,GADxC,cACQE,EADR,yBAESA,EAASC,MAFlB,mEAKO,SAASC,IACd,OAAON,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAGxD,SAASQ,EAAaC,GAC3B,OAAOR,EAAY,GAAD,OACbF,EADa,gCACmBC,EADnB,kBACoCS,EADpC,wCAKb,SAASC,EAAeC,GAC7B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,oBACwBX,EADxB,oBAKb,SAASY,EAAYD,GAC1B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,4BACgCX,EADhC,oBAKb,SAASa,EAAaF,GAC3B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,4BACgCX,EADhC,uB,qKC/BPc,EAAarB,EAAAA,GAAAA,GAAH,4CAIVsB,EAAatB,EAAAA,GAAAA,GAAH,kLASVuB,EAAcvB,EAAAA,GAAAA,GAAH,kIAQXwB,EAAaxB,EAAAA,GAAAA,EAAH,2H,SCfVyB,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,SAACL,EAAD,UACGK,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACR,EAAD,YACE,UAACC,EAAD,sBAAsBM,MACtB,SAACL,EAAD,UAAaM,MAFEF,S,UCPdG,EAAU,WACrB,IAAQb,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAA8Be,EAAAA,EAAAA,UAAS,MAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,wGAEVJ,GAAW,GACXE,EAAS,IAHC,UAIgBlB,EAAAA,EAAAA,IAAaF,GAJ7B,gBAIFuB,EAJE,EAIFA,QACFC,EAAiBC,EAAWF,GAClCP,EAAWQ,GAND,kDAQVJ,EAAS,KAAMM,SARL,yBAUVR,GAAW,GAVD,6EAAH,qDAcLO,EAAa,SAAAjB,GACjB,OAAOA,EAAQC,KAAI,SAAAkB,GAAM,MAAK,CAC5BjB,GAAIiB,EAAOjB,GACXC,OAAQgB,EAAOhB,OACfC,QAASe,EAAOf,aAIpBU,MACC,CAACtB,KAGF,gCACGiB,IAAW,SAAClC,EAAA,EAAD,IACXoC,IAAS,oEACRA,IAAUF,GAAWT,GAAWA,EAAQoB,OAAS,IACjD,SAACrB,EAAD,CAAaC,QAASA,KAEtBW,IAAUF,GAAWT,GAA8B,IAAnBA,EAAQoB,SACxC","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","services/ApiMovies.jsx","components/ReviewsList/ReviewList.styled.jsx","components/ReviewsList/ReviewsList.jsx","views/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  width: fit-content;\n  margin: 0 auto;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <BallTriangle\n        heigth=\"50\"\n        width=\"50\"\n        color=\"#ff6838\"\n        ariaLabel=\"loading\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c3a4cb8038ee207f234d0a08ae3fa54d';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrending() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchByQuery(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchActors(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&`\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  padding: 40px 0;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 26px;\n  border-radius: 53px 5px 53px 5px;\n  border: 1px solid rgba(54, 56, 83, 0.1);\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ReviewTitle = styled.h4`\n  margin-bottom: 16px;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 28px;\n  color: #363853;\n`;\n\nexport const ReviewText = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 30px;\n  color: #363853;\n  opacity: 0.9;\n`;\n","import {\n  ReviewItem,\n  ReviewList,\n  ReviewTitle,\n  ReviewText,\n} from './ReviewList.styled';\nimport propTypes from 'prop-types';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewList>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <ReviewTitle>Author: {author}</ReviewTitle>\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        );\n      })}\n    </ReviewList>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/ApiMovies';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const { results } = await fetchReviews(movieId);\n        const updatedReviews = formatData(results);\n        setReviews(updatedReviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const formatData = reviews => {\n      return reviews.map(review => ({\n        id: review.id,\n        author: review.author,\n        content: review.content,\n      }));\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h2>Something went wrong, please try again</h2>}\n      {!error && !loading && reviews && reviews.length > 0 && (\n        <ReviewsList reviews={reviews} />\n      )}\n      {!error && !loading && reviews && reviews.length === 0 && (\n        <h3>Sorry, no reviews for this movie</h3>\n      )}\n    </>\n  );\n};\n"],"names":["LoaderWrapper","styled","Loader","heigth","width","color","ariaLabel","BASE_URL","API_KEY","fetchMovies","url","config","axios","response","data","fetchTrending","fetchByQuery","query","fetchMovieById","movieId","fetchActors","fetchReviews","ReviewList","ReviewItem","ReviewTitle","ReviewText","ReviewsList","reviews","map","id","author","content","Reviews","useParams","useState","setReviews","loading","setLoading","error","setError","useEffect","fetch","results","updatedReviews","formatData","message","review","length"],"sourceRoot":""}