{"version":3,"file":"static/js/650.f696ce62.chunk.js","mappings":"gMAEaA,E,QAAgBC,GAAAA,IAAH,kE,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,gB,mGCRLC,EAAYN,EAAAA,GAAAA,GAAH,0HAOTO,EAAYP,EAAAA,GAAAA,GAAH,oN,SCLTQ,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GACV,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFKL,EAAME,W,0MCR1BI,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SACyBC,IAAAA,IAAUF,EAAKC,GADxC,cACQE,EADR,yBAESA,EAASC,MAFlB,mEAKO,SAASC,IACd,OAAON,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAGxD,SAASQ,EAAaC,GAC3B,OAAOR,EAAY,GAAD,OACbF,EADa,gCACmBC,EADnB,kBACoCS,EADpC,wCAKb,SAASC,EAAeC,GAC7B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,oBACwBX,EADxB,oBAKb,SAASY,EAAYD,GAC1B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,4BACgCX,EADhC,oBAKb,SAASa,EAAaF,GAC3B,OAAOV,EAAY,GAAD,OACbF,EADa,kBACKY,EADL,4BACgCX,EADhC,uB,sJC/BPc,E,QAAQlC,GAAAA,GAAH,iK,SCALmC,EAAiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC/B,OAAO,SAACF,EAAD,UAAQE,K,oBCIJC,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO7B,EAAP,KAAe8B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,wGAEID,GAAW,GACXF,EAAS,IAHb,UAI8Bd,EAAAA,EAAAA,MAJ9B,gBAIYkB,EAJZ,EAIYA,QACFC,EAAcC,EAAWF,GAC/BN,EAAUO,GANd,kDAQIL,EAAS,KAAMO,SARnB,yBAUIL,GAAW,GAVf,8EADc,sBAed,IAAMI,EAAa,SAAArB,GACjB,OAAOA,EAAKd,KAAI,SAAAqC,GAAI,MAAK,CAAElC,GAAIkC,EAAKlC,GAAIG,MAAO+B,EAAK/B,YAhBvC,WAAD,wBAmBdgC,KACC,KAGD,UAACC,EAAA,EAAD,WACGT,IAAW,SAACzC,EAAA,EAAD,IACXQ,IAAWiC,IAAYF,IACtB,iCACE,SAACL,EAAD,CAAgBC,KAAM,oBACtB,SAAC5B,EAAA,EAAD,CAAWC,OAAQA,OAGtB+B,IAAS","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/ApiMovies.jsx","components/SectionHeading/SectionHeading.styled.jsx","components/SectionHeading/SectionHeading.jsx","views/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  width: fit-content;\n  margin: 0 auto;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <BallTriangle\n        heigth=\"50\"\n        width=\"50\"\n        color=\"#ff6838\"\n        ariaLabel=\"loading\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  list-style-type: circle;\n  list-style-position: inside;\n  column-count: 2;\n  height: 400px;\n`;\n\nexport const FilmsItem = styled.li`\n  font-size: 18px;\n  line-height: 24px;\n  color: #363853;\n  transition: color 250ms ease;\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  &:hover {\n    color: #ff7a50;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmsItem, FilmsList } from './MovieList.styled';\nimport propTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <FilmsList>\n      {movies.map(movie => {\n        return (\n          <FilmsItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </FilmsItem>\n        );\n      })}\n    </FilmsList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c3a4cb8038ee207f234d0a08ae3fa54d';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrending() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchByQuery(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchActors(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 16px;\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 43px;\n  text-transform: capitalize;\n  color: #363853;\n`;\n","import { Title } from './SectionHeading.styled';\n\nexport const SectionHeading = ({ text }) => {\n  return <Title>{text}</Title>;\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../services/ApiMovies';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SectionHeading } from 'components/SectionHeading/SectionHeading';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setLoading(true);\n        setError('');\n        const { results } = await fetchTrending();\n        const updatedData = formatData(results);\n        setMovies(updatedData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    const formatData = data => {\n      return data.map(item => ({ id: item.id, title: item.title }));\n    };\n\n    fetch();\n  }, []);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      {movies && !loading && !error && (\n        <>\n          <SectionHeading text={'Trending today'} />\n          <MovieList movies={movies} />\n        </>\n      )}\n      {error && <h2>Something went wrong, please try again</h2>}\n    </Container>\n  );\n};\n"],"names":["LoaderWrapper","styled","Loader","heigth","width","color","ariaLabel","FilmsList","FilmsItem","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","BASE_URL","API_KEY","fetchMovies","url","config","axios","response","data","fetchTrending","fetchByQuery","query","fetchMovieById","movieId","fetchActors","fetchReviews","Title","SectionHeading","text","HomePage","useState","setMovies","error","setError","loading","setLoading","useEffect","results","updatedData","formatData","message","item","fetch","Container"],"sourceRoot":""}